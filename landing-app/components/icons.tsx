import * as React from "react";



interface IconSvgProps extends React.SVGProps<SVGSVGElement> {
  size?: number;
  width?: number;
  height?: number;
}

export const Logo: React.FC<IconSvgProps> = ({
  size = 46,
  width,
  height,
  ...props
}) => {
  const aspectRatio = 2.591549296;

  const computedHeight = height ?? (width ? width / aspectRatio : size);
  const computedWidth = width ?? (height ? height * aspectRatio : size * aspectRatio);

  return (
    <div>
      <svg
        width={computedWidth}
        height={computedHeight}
        viewBox="0 0 184 71"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        {...props}
      >
        <rect x="0.615723" y="0.645508" width="182.769" height="70.3545" rx="35" fill="#D9D9D9"/>
<rect width="27.6743" height="10.352" rx="1" transform="matrix(-0.529703 -0.848183 0.715138 -0.698983 53.5574 35.0752)" fill="#1D1049"/>
<rect width="10.9888" height="10.352" rx="1" transform="matrix(-0.529703 -0.848183 0.715138 -0.698983 67.8679 54.391)" fill="#1D1049"/>
<g filter="url(#filter0_d_31_382)">
<path d="M76.3181 13.7135C76.7051 13.3194 77.2612 13.3764 77.5602 13.8408L82.5271 21.5537C82.8262 22.018 82.7549 22.7139 82.3679 23.1079L46.7505 59.3768C46.3636 59.7709 45.8075 59.7139 45.5085 59.2496L40.5415 51.5366C40.2425 51.0723 40.3138 50.3764 40.7008 49.9824L76.3181 13.7135Z" fill="#1D1049"/>
</g>
<path d="M77.4332 45.9309V30.3309H82.2092C83.9372 30.3309 85.3052 30.7629 86.3132 31.6269C87.3212 32.4909 87.8252 33.8189 87.8252 35.6109C87.8252 36.6029 87.6572 37.4509 87.3212 38.1549C86.9852 38.8429 86.5452 39.4029 86.0012 39.8349C85.4572 40.2669 84.8572 40.5789 84.2012 40.7709C83.5452 40.9629 82.9052 41.0589 82.2812 41.0589H80.7452V45.9309H77.4332ZM80.7452 39.5229H81.8972C82.3932 39.5229 82.8172 39.4189 83.1692 39.2109C83.5212 38.9869 83.7852 38.6029 83.9612 38.0589C84.1532 37.5149 84.2492 36.7469 84.2492 35.7549C84.2492 34.2829 84.0412 33.2749 83.6252 32.7309C83.2252 32.1709 82.6492 31.8909 81.8972 31.8909H80.7452V39.5229ZM89.0301 45.9309V30.3309H92.3421V44.2029H98.3901V45.9309H89.0301ZM105.386 46.1949C103.85 46.1949 102.554 45.8669 101.498 45.2109C100.458 44.5389 99.6665 43.6029 99.1225 42.4029C98.5945 41.2029 98.3305 39.7869 98.3305 38.1549C98.3305 36.5229 98.5945 35.1069 99.1225 33.9069C99.6665 32.6909 100.458 31.7549 101.498 31.0989C102.554 30.4269 103.85 30.0909 105.386 30.0909C106.922 30.0909 108.218 30.4269 109.274 31.0989C110.346 31.7549 111.154 32.6909 111.698 33.9069C112.242 35.1069 112.514 36.5229 112.514 38.1549C112.514 39.7869 112.242 41.2029 111.698 42.4029C111.154 43.6029 110.346 44.5389 109.274 45.2109C108.218 45.8669 106.922 46.1949 105.386 46.1949ZM105.386 44.4909C106.618 44.4909 107.498 43.9869 108.026 42.9789C108.57 41.9709 108.842 40.3629 108.842 38.1549C108.842 35.9629 108.57 34.3629 108.026 33.3549C107.482 32.3309 106.602 31.8189 105.386 31.8189C104.186 31.8189 103.314 32.3309 102.77 33.3549C102.242 34.3629 101.978 35.9629 101.978 38.1549C101.978 40.3629 102.234 41.9709 102.746 42.9789C103.274 43.9869 104.154 44.4909 105.386 44.4909ZM114.029 45.9309V30.3309H118.829C120.573 30.3309 121.941 30.7549 122.933 31.6029C123.941 32.4509 124.445 33.6589 124.445 35.2269C124.445 36.2989 124.181 37.2029 123.653 37.9389C123.125 38.6589 122.493 39.2109 121.757 39.5949L125.357 45.9309H121.541L118.613 40.2669H117.341V45.9309H114.029ZM117.341 38.6829H118.565C119.429 38.6829 120.029 38.4509 120.365 37.9869C120.701 37.5069 120.869 36.6349 120.869 35.3709C120.869 34.1389 120.685 33.2509 120.317 32.7069C119.965 32.1629 119.357 31.8909 118.493 31.8909H117.341V38.6829ZM126.704 45.9309V30.3309H136.064V32.0589H130.016V37.1949H135.344V38.8749H130.016V44.2029H136.4V45.9309H126.704Z" fill="#1D1049"/>
<defs>
<filter id="filter0_d_31_382" x="36.3567" y="13.4515" width="50.3552" height="54.1873" filterUnits="userSpaceOnUse" colorInterpolationFilters="sRGB">
<feFlood floodOpacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_31_382"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_31_382" result="shape"/>
</filter>
</defs>
      </svg>
    </div>
  );
};

export const DiscordIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M14.82 4.26a10.14 10.14 0 0 0-.53 1.1 14.66 14.66 0 0 0-4.58 0 10.14 10.14 0 0 0-.53-1.1 16 16 0 0 0-4.13 1.3 17.33 17.33 0 0 0-3 11.59 16.6 16.6 0 0 0 5.07 2.59A12.89 12.89 0 0 0 8.23 18a9.65 9.65 0 0 1-1.71-.83 3.39 3.39 0 0 0 .42-.33 11.66 11.66 0 0 0 10.12 0q.21.18.42.33a10.84 10.84 0 0 1-1.71.84 12.41 12.41 0 0 0 1.08 1.78 16.44 16.44 0 0 0 5.06-2.59 17.22 17.22 0 0 0-3-11.59 16.09 16.09 0 0 0-4.09-1.35zM8.68 14.81a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.93 1.93 0 0 1 1.8 2 1.93 1.93 0 0 1-1.8 2zm6.64 0a1.94 1.94 0 0 1-1.8-2 1.93 1.93 0 0 1 1.8-2 1.92 1.92 0 0 1 1.8 2 1.92 1.92 0 0 1-1.8 2z"
        fill="currentColor"
      />
    </svg>
  );
};

export const TwitterIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        d="M19.633 7.997c.013.175.013.349.013.523 0 5.325-4.053 11.461-11.46 11.461-2.282 0-4.402-.661-6.186-1.809.324.037.636.05.973.05a8.07 8.07 0 0 0 5.001-1.721 4.036 4.036 0 0 1-3.767-2.793c.249.037.499.062.761.062.361 0 .724-.05 1.061-.137a4.027 4.027 0 0 1-3.23-3.953v-.05c.537.299 1.16.486 1.82.511a4.022 4.022 0 0 1-1.796-3.354c0-.748.199-1.434.548-2.032a11.457 11.457 0 0 0 8.306 4.215c-.062-.3-.1-.611-.1-.923a4.026 4.026 0 0 1 4.028-4.028c1.16 0 2.207.486 2.943 1.272a7.957 7.957 0 0 0 2.556-.973 4.02 4.02 0 0 1-1.771 2.22 8.073 8.073 0 0 0 2.319-.624 8.645 8.645 0 0 1-2.019 2.083z"
        fill="currentColor"
      />
    </svg>
  );
};

export const GithubIcon: React.FC<IconSvgProps> = ({
  size = 24,
  width,
  height,
  ...props
}) => {
  return (
    <svg
      height={size || height}
      viewBox="0 0 24 24"
      width={size || width}
      {...props}
    >
      <path
        clipRule="evenodd"
        d="M12.026 2c-5.509 0-9.974 4.465-9.974 9.974 0 4.406 2.857 8.145 6.821 9.465.499.09.679-.217.679-.481 0-.237-.008-.865-.011-1.696-2.775.602-3.361-1.338-3.361-1.338-.452-1.152-1.107-1.459-1.107-1.459-.905-.619.069-.605.069-.605 1.002.07 1.527 1.028 1.527 1.028.89 1.524 2.336 1.084 2.902.829.091-.645.351-1.085.635-1.334-2.214-.251-4.542-1.107-4.542-4.93 0-1.087.389-1.979 1.024-2.675-.101-.253-.446-1.268.099-2.64 0 0 .837-.269 2.742 1.021a9.582 9.582 0 0 1 2.496-.336 9.554 9.554 0 0 1 2.496.336c1.906-1.291 2.742-1.021 2.742-1.021.545 1.372.203 2.387.099 2.64.64.696 1.024 1.587 1.024 2.675 0 3.833-2.33 4.675-4.552 4.922.355.308.675.916.675 1.846 0 1.334-.012 2.41-.012 2.737 0 .267.178.577.687.479C19.146 20.115 22 16.379 22 11.974 22 6.465 17.535 2 12.026 2z"
        fill="currentColor"
        fillRule="evenodd"
      />
    </svg>
  );
};

export const MoonFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M21.53 15.93c-.16-.27-.61-.69-1.73-.49a8.46 8.46 0 01-1.88.13 8.409 8.409 0 01-5.91-2.82 8.068 8.068 0 01-1.44-8.66c.44-1.01.13-1.54-.09-1.76s-.77-.55-1.83-.11a10.318 10.318 0 00-6.32 10.21 10.475 10.475 0 007.04 8.99 10 10 0 002.89.55c.16.01.32.02.48.02a10.5 10.5 0 008.47-4.27c.67-.93.49-1.519.32-1.79z"
      fill="currentColor"
    />
  </svg>
);

export const SunFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <g fill="currentColor">
      <path d="M19 12a7 7 0 11-7-7 7 7 0 017 7z" />
      <path d="M12 22.96a.969.969 0 01-1-.96v-.08a1 1 0 012 0 1.038 1.038 0 01-1 1.04zm7.14-2.82a1.024 1.024 0 01-.71-.29l-.13-.13a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.984.984 0 01-.7.29zm-14.28 0a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a1 1 0 01-.7.29zM22 13h-.08a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zM2.08 13H2a1 1 0 010-2 1.038 1.038 0 011.04 1 .969.969 0 01-.96 1zm16.93-7.01a1.024 1.024 0 01-.71-.29 1 1 0 010-1.41l.13-.13a1 1 0 011.41 1.41l-.13.13a.984.984 0 01-.7.29zm-14.02 0a1.024 1.024 0 01-.71-.29l-.13-.14a1 1 0 011.41-1.41l.13.13a1 1 0 010 1.41.97.97 0 01-.7.3zM12 3.04a.969.969 0 01-1-.96V2a1 1 0 012 0 1.038 1.038 0 01-1 1.04z" />
    </g>
  </svg>
);

export const HeartFilledIcon = ({
  size = 24,
  width,
  height,
  ...props
}: IconSvgProps) => (
  <svg
    aria-hidden="true"
    focusable="false"
    height={size || height}
    role="presentation"
    viewBox="0 0 24 24"
    width={size || width}
    {...props}
  >
    <path
      d="M12.62 20.81c-.34.12-.9.12-1.24 0C8.48 19.82 2 15.69 2 8.69 2 5.6 4.49 3.1 7.56 3.1c1.82 0 3.43.88 4.44 2.24a5.53 5.53 0 0 1 4.44-2.24C19.51 3.1 22 5.6 22 8.69c0 7-6.48 11.13-9.38 12.12Z"
      fill="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth={1.5}
    />
  </svg>
);

export const SearchIcon = (props: IconSvgProps) => (
  <svg
    aria-hidden="true"
    fill="none"
    focusable="false"
    height="1em"
    role="presentation"
    viewBox="0 0 24 24"
    width="1em"
    {...props}
  >
    <path
      d="M11.5 21C16.7467 21 21 16.7467 21 11.5C21 6.25329 16.7467 2 11.5 2C6.25329 2 2 6.25329 2 11.5C2 16.7467 6.25329 21 11.5 21Z"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
    <path
      d="M22 22L20 20"
      stroke="currentColor"
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
    />
  </svg>
);
